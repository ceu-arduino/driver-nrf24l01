#include "wdt.ceu"
#include "gpio.ceu"

#ifdef ARDUINO_BOARD_MEGA
#include "pin_10.ceu"
#define IRQ 10
#else
#include "pin_02.ceu"
#define IRQ 2
#endif

#include "spi.ceu"
#include "nrf24l01.ceu"

#include "usart.ceu"
#include "string.ceu"
spawn Usart(9600);
var[20] byte str = [] .. "Ceu - nrf-tx-rx\n\r";
await Usart_TX(&str);
//{Serial.begin(9600);}
//{_DELAY(2000);}
//{Serial.println("Ceu - nrf-tx-rx");}
//{_DELAY(20);}

var Lock spi = _;
spawn Spi();

var Nrf24l01_ nrf = val Nrf24l01_(&spi, IRQ, 8,7, _,_,_,_,_,_,_);
spawn Nrf24l01(&nrf);
await nrf.ok;

output on/off PIN_13;

var int i;
loop i do
    watching Wdt(5000)
    do
        emit PIN_13(((i+1) % 2) as on/off);
        do
            var[1] byte buf = [i];
            await Nrf24l01_TX(&nrf, &buf);

            str = [] .. "< ";
            call String_Append_INT(&str, buf[0], _);
            call String_Append_STR(&str, "\n\r");
            await Usart_TX(&str);
            //{Serial.print("< "); Serial.println(@buf[0]); _DELAY(10);}
        end
        do
            var[1] byte buf = [];
            await Nrf24l01_RX(&nrf, &buf);

            str = [] .. "> ";
            call String_Append_INT(&str, buf[0], _);
            call String_Append_STR(&str, "\n\r");
            await Usart_TX(&str);
            //{Serial.print("> "); Serial.println(@buf[0]); _DELAY(10);}
        end
        await FOREVER;
    end
end
